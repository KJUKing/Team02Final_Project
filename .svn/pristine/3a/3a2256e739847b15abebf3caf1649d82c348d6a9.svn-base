<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.employee.dao.EmployeeMapper">
	<resultMap type="EmployeeVO" id="empMap" autoMapping="true">
		<association property="oAuth" autoMapping="true"/>
	</resultMap>
	
	
	<select id="selectEmployee" resultMap="empMap">
		SELECT EMPLOYEE.*,
			TB_OAUTH.*
			FROM EMPLOYEE INNER JOIN TB_OAUTH
				ON EMPLOYEE.ACCOUNT_MAIL = TB_OAUTH.OAUTH_EMP_EMAIL
			WHERE EMPLOYEE.ACCOUNT_MAIL=#{accountMail}
	</select>
	
	<select id="selectEmployeeList" resultMap="empMap">
		SELECT EMPLOYEE.*,
			TB_OAUTH.*
			FROM EMPLOYEE INNER JOIN TB_OAUTH
				ON EMPLOYEE.ACCOUNT_MAIL = TB_OAUTH.OAUTH_EMP_EMAIL	
	</select>
	
	
	<insert id="insertEmployee">
		INSERT INTO EMPLOYEE(EMP_ID, EMP_PASS, EMP_NAME, ACCOUNT_MAIL, EMP_JOIN, EMP_STATUS, 
		EMP_VACATION, POSI_ID, SEMP_ID)
		VALUES(
			#{empId,jdbcType=VARCHAR}
			, '1234' <!-- 초기 비밀번호 -->
			, #{empName,jdbcType=VARCHAR}
			, #{accountMail,jdbcType=VARCHAR}
			, #{empJoin,jdbcType=DATE}
			, 'W' <!-- 첫 insert 시에는 W상태 -->
			, #{empVacation,jdbcType=NUMERIC}
			, #{posiId,jdbcType=VARCHAR} <!-- 직급아이디 -->
			, #{sempId,jdbcType=VARCHAR} <!-- 상사아이디 -->
		)
	</insert>
	
	<!-- 
		emp pass나 account_mail이 업데이트 될 경우 상위 테이블인 account가 먼저 업데이트가 되어야함
		해당 트리거 필요(넣어뒀음)	
	-->
	<update id="updateEmployee">
		UPDATE EMPLOYEE
		SET
			<trim prefixOverrides=",">
				<if test="empPass neq null and empPass.length gt 0">
				 , EMP_PASS=#{empPass,jdbcType=VARCHAR}
				</if>
				<if test="empName neq null and empName.length gt 0">
				 , EMP_NAME=#{empName,jdbcType=VARCHAR}
				</if>
				<if test="empBirth neq null and empBirth.length gt 0">
				 , EMP_BIRTH=#{empBirth,jdbcType=DATE}
				</if>
				<if test="empGender neq null and empGender.length gt 0">
				 , EMP_GENDER=#{empGender,jdbcType=VARCHAR}
				</if>
				<if test="empAddr1 neq null and empAddr1.length gt 0">
				 , EMP_ADDR1=#{empAddr1,jdbcType=VARCHAR}
				</if>
				<if test="empAddr2 neq null and empAddr2.length gt 0">
				 , EMP_ADDR2=#{empAddr2,jdbcType=VARCHAR}
				</if>
				<if test="empPhone neq null and empPhone.length gt 0">
				 , EMP_PHONE=#{empPhone,jdbcType=VARCHAR}
				</if>
				<if test="accountMail neq null and accountMail.length gt 0">
				 , ACCOUNT_MAIL=#{accountMail,jdbcType=VARCHAR}
				</if>
				<if test="empJoin neq null and empJoin.length gt 0">
				 , EMP_JOIN=#{empJoin,jdbcType=DATE}
				</if>
				<if test="empImg neq null and empImg.length gt 0">
				 , EMP_IMG=#{empImg,jdbcType=BLOB}
				</if>
				<if test="empSignimg neq null and empSignimg.length gt 0">
				 , EMP_SIGNIMG=#{empSignimg,jdbcType=BLOB}
				</if>
				<if test="empStatus neq null and empStatus.length gt 0">
				 , EMP_STATUS=#{empStatus,jdbcType=VARCHAR}
				</if>
				<if test="empVacation neq null and empVacation.length gt 0">
				 , EMP_VACATION=#{empVacation,jdbcType=NUMBER}
				</if>
				<if test="posiId neq null and posiId.length gt 0">
				 , POSI_ID=#{posiId,jdbcType=VARCHAR}
				</if>
				<if test="sempId neq null and sempId.length gt 0">
				 , SEMP_ID=#{sempId,jdbcType=VARCHAR}
				</if>
			</trim>
		WHERE EMP_ID=#{empId}
	</update>
	
	<update id="updateEmployeeStatus">
		UPDATE EMPLOYEE
		SET EMP_STATUS='S'
		WHERE ACCOUNT_MAIL=#{accountMail}
	</update>
	
	<delete id="deleteEmployee">
	
	</delete>
	
	
	
	
	

</mapper>