package kr.or.ddit.notice.service;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.Optional;

import kr.or.ddit.atch.service.AtchFileService;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import org.springframework.core.io.Resource;
import kr.or.ddit.commons.enumpkg.ServiceResult;
import kr.or.ddit.commons.paging.PaginationInfo;
import kr.or.ddit.notice.dao.NoticeMapper;
import kr.or.ddit.notice.vo.NoticeVO;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.util.CollectionUtils;

import javax.annotation.PostConstruct;

@RequiredArgsConstructor
@Service
@Slf4j
public class NoticeServiceImpl implements NoticeService{

    @Autowired
    private final NoticeMapper dao;
    @Autowired
    private final AtchFileService atchFileService; // 첨부파일 서비스 공통
    // properties 설정 (FreeBoard 때와 동일하게 init)
    @Value("#{dirInfo.saveDir}")
    private Resource saveFolderRes;
    private File saveFolder;

    @PostConstruct
    public void init() throws IOException {
        this.saveFolder = saveFolderRes.getFile();
    }

    @Override
    public ServiceResult createNotice(NoticeVO notice) {
        // 첨부파일 있는 경우 처리
        Integer atchFileId = Optional.ofNullable(notice.getAtchFile())
                .filter(af-> !CollectionUtils.isEmpty(af.getFileDetails()))
                .map(af -> {
                    atchFileService.createAtchFile(af, saveFolder);
                    return af.getAtchFileId();
                }).orElse(null);

        notice.setAtchFileId(atchFileId);

        int rowcnt = dao.insertNotice(notice);

        return rowcnt > 0 ? ServiceResult.OK : ServiceResult.FAIL;
    }

    @Override
    public ServiceResult modifyNotice(NoticeVO notice) {
        return null;
    }

    @Override
    public ServiceResult removeNotice(String NoticeId) {
        return null;
    }

    @Override
    public List<NoticeVO> readNoticeList(PaginationInfo<NoticeVO> paging) {

        if (paging != null) {
            int totalRecord = dao.selectTotalRecord(paging);
            paging.setTotalRecord(totalRecord);
        }
        return dao.selectNoticeList(paging);
    }

    @Override
    public NoticeVO readNoticeDetail(String NoticeNo) {
        return dao.selectNoticeDetail(NoticeNo);
    }
}
